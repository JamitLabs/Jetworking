{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Interceptor"}],"languages":["swift"],"platforms":["iOS"]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/jetworking\/interceptor"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Jetworking\/documentation\/Jetworking\/SessionCacheInterceptor"],"kind":"relationships","title":"Inherited By","type":"inheritedBy"},{"identifiers":["doc:\/\/Jetworking\/documentation\/Jetworking\/AuthenticationInterceptor","doc:\/\/Jetworking\/documentation\/Jetworking\/DefaultSessionCacheIntercepter","doc:\/\/Jetworking\/documentation\/Jetworking\/HeaderFieldsInterceptor","doc:\/\/Jetworking\/documentation\/Jetworking\/LoggingInterceptor"],"kind":"relationships","title":"Conforming Types","type":"conformingTypes"}],"identifier":{"url":"doc:\/\/Jetworking\/documentation\/Jetworking\/Interceptor","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Base Protocol for "},{"type":"codeVoice","code":"Interceptor"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"codeVoice","code":"Interceptors"},{"type":"text","text":" are able to intercept a request and a response.."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Interceptor"}],"title":"Interceptor","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:10Jetworking11InterceptorP","modules":[{"name":"Jetworking"}],"navigatorTitle":[{"kind":"identifier","text":"Interceptor"}]},"hierarchy":{"paths":[["doc:\/\/Jetworking\/documentation\/Jetworking"]]},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/Jetworking\/documentation\/Jetworking\/Interceptor\/intercept(_:)-p5sg","doc:\/\/Jetworking\/documentation\/Jetworking\/Interceptor\/intercept(response:data:error:)-77rx"]}],"references":{"doc://Jetworking/documentation/Jetworking/Interceptor":{"role":"symbol","title":"Interceptor","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Interceptor"}],"abstract":[{"type":"text","text":"Base Protocol for "},{"type":"codeVoice","code":"Interceptor"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"codeVoice","code":"Interceptors"},{"type":"text","text":" are able to intercept a request and a response.."}],"identifier":"doc:\/\/Jetworking\/documentation\/Jetworking\/Interceptor","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Interceptor"}],"url":"\/documentation\/jetworking\/interceptor"},"doc://Jetworking/documentation/Jetworking/AuthenticationInterceptor":{"role":"symbol","title":"AuthenticationInterceptor","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AuthenticationInterceptor"}],"abstract":[{"type":"text","text":"Implementation of a request interceptor which handles authentication."},{"type":"text","text":" "},{"type":"text","text":"Currently there are four different authentication methods provided which are "},{"type":"codeVoice","code":"none"},{"type":"text","text":", "},{"type":"codeVoice","code":"basicAuthentication"},{"type":"text","text":", "},{"type":"codeVoice","code":"bearerToken"},{"type":"text","text":" and "},{"type":"codeVoice","code":"custom"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"To be able to be highly flexible to also being able to switch between authentication methods, we provided the possibility to pass in an "},{"type":"codeVoice","code":"autoclosure"},{"type":"text","text":" "},{"type":"text","text":"which is evaluated when this request is being intercepted."}],"identifier":"doc:\/\/Jetworking\/documentation\/Jetworking\/AuthenticationInterceptor","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AuthenticationInterceptor"}],"url":"\/documentation\/jetworking\/authenticationinterceptor"},"doc://Jetworking/documentation/Jetworking/LoggingInterceptor":{"role":"symbol","title":"LoggingInterceptor","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LoggingInterceptor"}],"abstract":[{"type":"text","text":"Implementation of a request interceptor which logs the request information."}],"identifier":"doc:\/\/Jetworking\/documentation\/Jetworking\/LoggingInterceptor","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LoggingInterceptor"}],"url":"\/documentation\/jetworking\/logginginterceptor"},"doc://Jetworking/documentation/Jetworking/Interceptor/intercept(_:)-p5sg":{"defaultImplementations":1,"role":"symbol","title":"intercept(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"intercept"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"URLRequest","preciseIdentifier":"s:10Foundation10URLRequestV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"URLRequest","preciseIdentifier":"s:10Foundation10URLRequestV"}],"abstract":[{"type":"text","text":"Intercepting the request to create the ability to modify the "},{"type":"codeVoice","code":"URLRequest"},{"type":"text","text":" before executing it. Example usages are adding request headers, authentication"},{"type":"text","text":" "},{"type":"text","text":"and request logging."}],"identifier":"doc:\/\/Jetworking\/documentation\/Jetworking\/Interceptor\/intercept(_:)-p5sg","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/jetworking\/interceptor\/intercept(_:)-p5sg"},"doc://Jetworking/documentation/Jetworking/SessionCacheInterceptor":{"role":"symbol","title":"SessionCacheInterceptor","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SessionCacheInterceptor"}],"abstract":[{"type":"text","text":"A type that represents a session cache interceptor used for intercepting a cached response."}],"identifier":"doc:\/\/Jetworking\/documentation\/Jetworking\/SessionCacheInterceptor","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SessionCacheInterceptor"}],"url":"\/documentation\/jetworking\/sessioncacheinterceptor"},"doc://Jetworking/documentation/Jetworking/Interceptor/intercept(response:data:error:)-77rx":{"defaultImplementations":1,"role":"symbol","title":"intercept(response:data:error:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"intercept"},{"kind":"text","text":"("},{"kind":"externalParam","text":"response"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"URLResponse","preciseIdentifier":"c:objc(cs)NSURLResponse"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Data","preciseIdentifier":"s:10Foundation4DataV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"error"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"URLResponse","preciseIdentifier":"c:objc(cs)NSURLResponse"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Intercepting the response to add the ability to modify a response of a request. Additionally it is possible handle data and errors."}],"identifier":"doc:\/\/Jetworking\/documentation\/Jetworking\/Interceptor\/intercept(response:data:error:)-77rx","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/jetworking\/interceptor\/intercept(response:data:error:)-77rx"},"doc://Jetworking/documentation/Jetworking/DefaultSessionCacheIntercepter":{"role":"symbol","title":"DefaultSessionCacheIntercepter","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DefaultSessionCacheIntercepter"}],"abstract":[{"type":"text","text":"Implementation of a session cache interceptor which allows the response data from an "},{"type":"codeVoice","code":"HTTP\/HTTPS"},{"type":"text","text":" request to be temporarily stored."}],"identifier":"doc:\/\/Jetworking\/documentation\/Jetworking\/DefaultSessionCacheIntercepter","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DefaultSessionCacheIntercepter"}],"url":"\/documentation\/jetworking\/defaultsessioncacheintercepter"},"doc://Jetworking/documentation/Jetworking/HeaderFieldsInterceptor":{"role":"symbol","title":"HeaderFieldsInterceptor","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HeaderFieldsInterceptor"}],"abstract":[{"type":"text","text":"Implementation of a request interceptor which adds header fields to the request."}],"identifier":"doc:\/\/Jetworking\/documentation\/Jetworking\/HeaderFieldsInterceptor","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HeaderFieldsInterceptor"}],"url":"\/documentation\/jetworking\/headerfieldsinterceptor"},"doc://Jetworking/documentation/Jetworking":{"role":"collection","title":"Jetworking","abstract":[],"identifier":"doc:\/\/Jetworking\/documentation\/Jetworking","kind":"symbol","type":"topic","url":"\/documentation\/jetworking"}}}